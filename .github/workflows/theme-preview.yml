name: Shopify Theme Management

on:
  pull_request:
    types: [opened, synchronize, closed]
  workflow_dispatch:

jobs:
  manage-theme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Debug API Authentication
        if: github.event_name == 'pull_request'
        run: |
          curl -v -X GET "https://${{ secrets.SHOP_STORE }}/admin/api/2023-10/shop.json" \
            -H "Content-Type: application/json" \
            -H "X-Shopify-Access-Token: ${{ secrets.SHOP_PASSWORD }}"
        env:
          SHOP_STORE: ${{ secrets.SHOP_STORE }}
          SHOP_PASSWORD: ${{ secrets.SHOP_PASSWORD }}

      # Create and deploy a PR specific Shopify theme when PR is opened/updated
      - name: Deploy PR-specific Shopify theme
        if: github.event_name == 'pull_request' && github.event.action != 'closed'
        uses: matthew-petrie/shopify-theme-actions@1.2.2
        id: deploy-theme  # Add this line to reference this step later
        with:
          ACTION: 'DEPLOYMENT_PREVIEW'
          SHOPIFY_STORE_URL: ${{ secrets.SHOP_STORE }}
          SHOPIFY_PASSWORD: ${{ secrets.SHOP_PASSWORD }}
          SHOPIFY_API_KEY: ${{ secrets.SHOPIFY_API_KEY_THEME }}
          SHOPIFY_THEME_DIRECTORY: '.' # Or your theme directory
          SHOPIFY_ALLOW_LIVE_THEME_DEPLOYMENT: false # Set to true if deploying to a live theme
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Edit
      - name: Edit PR comment with clickable link
        if: github.event_name == 'pull_request' && github.event.action != 'closed'
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            // Add a delay to ensure the original comment is created
            await new Promise(resolve => setTimeout(resolve, 5000));
            
            const comments = await github.rest.issues.listComments({ 
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.data.reverse().find(comment => comment.user.login === 'github-actions[bot]');
      
            if (botComment) {
              // Extract theme ID and preview URL from the original comment
              const originalBody = botComment.body;
              const themeIdMatch = originalBody.match(/theme id '(\d+)'/);
              const previewUrlMatch = originalBody.match(/(https:\/\/.*preview_theme_id=\d+)/);
              
              const themeId = themeIdMatch ? themeIdMatch[1] : 'Unknown';
              const previewUrl = previewUrlMatch ? previewUrlMatch[1] : 'Unknown';
              const storeUrl = '${{ secrets.SHOP_STORE }}';

              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: `ðŸŽ‰ Shopify theme has been deployed!

            Theme ID: ${themeId}
            Store URL: ${storeUrl}
            Preview: [Click here to preview](${previewUrl})`
              });
            } else {
              console.log('No existing bot comment found');
            }
            
      - name: Debug GitHub context
        if: github.event_name == 'pull_request' && github.event.action == 'closed'
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Event action: ${{ github.event.action }}"
          echo "PR number: ${{ github.event.pull_request.number }}"

      # Remove the previously created PR specific Shopify theme when PR is closed
      - name: Remove PR-specific Shopify theme
        if: github.event_name == 'pull_request' && github.event.action == 'closed'
        uses: matthew-petrie/shopify-theme-actions@1.2.2
        with:
          ACTION: 'REMOVE_DEPLOYMENT_PREVIEW_THEME'
          SHOPIFY_STORE_URL: ${{ secrets.SHOP_STORE }}
          SHOPIFY_PASSWORD: ${{ secrets.SHOP_PASSWORD }}
          SHOPIFY_API_KEY: ${{ secrets.SHOPIFY_API_KEY_THEME }}
          SHOPIFY_THEME_DIRECTORY: '.' # Or your theme directory
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Add a step that always runs for testing
      - name: Echo test
        run: |
          echo "Workflow is running. Event name: ${{ github.event_name }}"